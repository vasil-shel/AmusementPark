
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.ГруппаПопулярныеПокупки.Видимость = Ложь;
	Элементы.СписокНоменклатуры.Видимость = Ложь;
	Элементы.ДекорацияБаллыКлиента.Видимость = Ложь;
	КоличествоИзбранныхТоваров = 3;
	МаксимальнаяДоляОплаты = Константы.МаксимальнаяДоляОплатыБаллами.Получить();
	
	СоздатьДекорацииИзбранныхТоваров();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура БаллыКСписаниюПриИзменении(Элемент)
	РассчитатьСумму();
КонецПроцедуры

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	
	КлиентПриИзменениинаСервере();
	РассчитатьСумму();
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияБаллыКлиентаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "#Заполнить" Тогда
		СтандартнаяОбработка = Ложь;
		БаллыКСписанию = МожноСписатьБаллов;
		РассчитатьСумму();
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокНоменклатуры

&НаКлиенте
Процедура СписокНоменклатурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если ТекДанные.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	СтрПар = Новый Структура("Номенклатура, Цена");
	ЗаполнитьЗначенияСвойств(СтрПар, ТекДанные);
	ДобавитьНоменклатуру(СтрПар);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	
	ТекДанные = Элемент.ТекущиеДанные;
	
	Если ТекДанные.ЭтоГруппа Тогда
		Выполнение = Ложь;
		Возврат;
	КонецЕсли;
	
//	Для Каждого ТекСтрока Из Элемент.ВыделенныеСтроки Цикл
//	
//		а = 1;
//		
//	КонецЦикла;
	ПараметрыПеретаскивания.Значение = Новый Структура("Номенклатура, Цена");
	ЗаполнитьЗначенияСвойств(ПараметрыПеретаскивания.Значение, ТекДанные);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПозицииПродажи

&НаКлиенте
Процедура ПозицииПродажиЦенаПриИзменении(Элемент)
	
	РассчитатьСуммуСтроки(Элементы.ПозицииПродажи.ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура ПозицииПродажиКоличествоПриИзменении(Элемент)
	
	РассчитатьСуммуСтроки(Элементы.ПозицииПродажи.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииПродажиПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
//	Для Каждого ЭлНоменклатура Из ПараметрыПеретаскивания.Значение Цикл
//		ЦенаНоменклатуры = ЦенаНоменклатуры(ЭлНоменклатура);
//		
//		ПараметрыДобавления = Новый Структура("Номенклатура, Цена", ЭлНоменклатура, ЦенаНоменклатуры);
		ДобавитьНоменклатуру(ПараметрыПеретаскивания.Значение);
		
//	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПозицииПродажиПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПозицииПродажиНоменклатураПриИзменении(Элемент)
	
	ЗаполнитьДекорациюБаллыКлиента();

	ТекСтрока = Элементы.ПозицииПродажи.ТекущиеДанные;
	ТекСтрока.Цена = ЦенаНоменклатуры(ТекСтрока.Номенклатура);
	РассчитатьСуммуСтроки(ТекСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ПозицииПродажиПриИзменении(Элемент)
	ЗаполнитьДекорациюБаллыКлиента();
	РассчитатьСумму();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьПродажу(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	НовыйДокумент = ЗаписатьПродажуНаСервере();
	РассчитатьСумму();
	
	ОповеститьОбИзменении(НовыйДокумент);
	
	ПоказатьОповещениеПользователя("Создан документ",
		ПолучитьНавигационнуюСсылку(НовыйДокумент) ,
		Строка(НовыйДокумент));
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	Элементы.СписокНоменклатуры.Видимость = (Не Элементы.СписокНоменклатуры.Видимость);
	Элементы.ПозицииПродажиПодбор.Пометка = Элементы.СписокНоменклатуры.Видимость;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ЦенаНоменклатуры(Номенклатура)
	Возврат РегистрыСведений.ЦеныНоменклатуры.ЦенаНоменклатуры(Номенклатура);
КонецФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(СтрокаТЗ)
	СтрокаТЗ.Сумма = СтрокаТЗ.Цена * СтрокаТЗ.Количество;
	РассчитатьСумму();
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСумму()
	СуммаИтого = ПозицииПродажи.Итог("Сумма") - БаллыКСписанию;
КонецПроцедуры

&НаСервере
Процедура КлиентПриИзменениинаСервере()

	Если ЗначениеЗаполнено(Клиент) Тогда
		
		ОстатокБаллов = Документы.ПродажаБилета.ОстатокБонусныхБалловКлиентов(Клиент, ТекущаяДатаСеанса());
		Элементы.ДекорацияБаллыКлиента.Видимость = Истина;
		
	Иначе
		
		ОстатокБаллов = 0;
		Элементы.ДекорацияБаллыКлиента.Видимость = Ложь;
		
	КонецЕсли;
	
	БаллыКСписанию = 0;
	ЗаполнитьДекорациюБаллыКлиента();
	ЗаполнитьИзбранныеТоварыКлиента();
		
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИзбранныеТоварыКлиента()
	
	СброситьИзбранныеТоварыКлиента();
	
	Если ЗначениеЗаполнено(Клиент) Тогда
		
		ТекДата = ТекущаяДатаСеанса();
		
		Запрос = Новый Запрос();
		Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПродажиОбороты.Номенклатура,
		|	Истина КАК Активно
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(&ДатаНачала, &ДатаКонца,, Клиент = &Клиент) КАК ПродажиОбороты
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПродажиОбороты.СуммаОборот УБЫВ";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ ПЕРВЫЕ 1", "ВЫБРАТЬ ПЕРВЫЕ " + КоличествоИзбранныхТоваров);
		Запрос.УстановитьПараметр("ДатаНачала", ДобавитьМесяц(ТекДата, -3));
		Запрос.УстановитьПараметр("ДатаКонца", ТекДата);
		Запрос.УстановитьПараметр("Клиент", Клиент);
		Выборка = Запрос.Выполнить().Выбрать();	
		
		Ном = 0;
		
		Пока Выборка.Следующий() Цикл
			
			СтрокаТЗ = ДинамическиеЭлементы[Ном];
			ЗаполнитьЗначенияСвойств(СтрокаТЗ, Выборка);
			
			Ном = Ном + 1;
			
		КонецЦикла;

		Элементы.ГруппаПопулярныеПокупки.Видимость = (Ном > 0);
		
	КонецЕсли;
	
	ЗаполнитьДекорацииИзбранныхТоваров();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДекорацииИзбранныхТоваров()
	
	Для Каждого СтрокаТЗ Из ДинамическиеЭлементы Цикл

		Элемент = Элементы[СтрокаТЗ.ИмяЭлемента];
		Элемент.Видимость = СтрокаТЗ.Активно;
		Элемент.Заголовок = СтрокаТЗ.Номенклатура;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СброситьИзбранныеТоварыКлиента()
	
	Для Каждого СтрокаТЗ Из ДинамическиеЭлементы Цикл
		СтрокаТЗ.Номенклатура = Справочники.Номенклатура.ПустаяСсылка();
		СтрокаТЗ.Активно = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДекорациюБаллыКлиента()
	
	Если ОстатокБаллов = 0 Тогда
		
		Элементы.ДекорацияБаллыКлиента.Заголовок = "У клиента нет баллов к списанию";
		Возврат;
		
	КонецЕсли;
	
	МожноСписатьБаллов = Мин(ОстатокБаллов, СуммаИтого * МаксимальнаяДоляОплаты / 100);
	Шаблон = "Накоплено %1 баллов, из них можно списать %2. ";
	Описание = СтрШаблон(Шаблон, ОстатокБаллов, МожноСписатьБаллов);
	
	ЧастиФорматированнойСтроки = Новый Массив();
	ЧастиФорматированнойСтроки.Добавить(Описание);
	ЧастиФорматированнойСтроки.Добавить(Новый ФорматированнаяСтрока("Заполнить.",,,, "#Заполнить"));

	Элементы.ДекорацияБаллыКлиента.Заголовок = Новый ФорматированнаяСтрока(ЧастиФорматированнойСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНоменклатуру(СтрПараметров)

	Отбор = Новый Структура("Номенклатура", СтрПараметров.Номенклатура);
	
	СтрокиТЗ = ПозицииПродажи.НайтиСтроки(Отбор);
	
	Если СтрокиТЗ.Количество() = 0 Тогда
		СтрокаТЗ = ПозицииПродажи.Добавить();
		СтрокаТЗ.Номенклатура = СтрПараметров.Номенклатура;
		СтрокаТЗ.Цена = СтрПараметров.Цена;
	Иначе
		СтрокаТЗ = СтрокиТЗ[0];
	КонецЕсли;
	
	СтрокаТЗ.Количество = СтрокаТЗ.Количество + 1;
	
	РассчитатьСуммуСтроки(СтрокаТЗ);
	ЗаполнитьДекорациюБаллыКлиента();
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьПродажуНаСервере()
	
	ДокОбъект = Документы.ПродажаБилета.СоздатьДокумент();
	ДокОбъект.Заполнить(Неопределено);
	ДокОбъект.Дата = ТекущаяДатаСеанса();
	ДокОбъект.Клиент = Клиент;
	ДокОбъект.Филиал = Филиал;
	ДокОбъект.СуммаДокумента = СуммаИтого;
	ДокОбъект.БаллыКСписанию = БаллыКСписанию;	
	ДокОбъект.ПозицииПродажи.Загрузить(ПозицииПродажи.Выгрузить());
	
	Если Не ДокОбъект.ПроверитьЗаполнение() Тогда
		ВызватьИсключение "Не удалось записать продажу"
	КонецЕсли;
	
	ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	СброситьЗаполнениеФормы();
	
	Возврат ДокОбъект.Ссылка;
	
КонецФункции

&НаСервере
Процедура СброситьЗаполнениеФормы()

	Клиент = Справочники.Клиенты.ПустаяСсылка();
	БаллыКСписанию = 0;
	СуммаИтого = 0;
	ПозицииПродажи.Очистить();
	
	КлиентПриИзменениинаСервере();
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДекорацииИзбранныхТоваров()

	ГруппаРодитель = Элементы.ГруппаПопулярныеПокупки;
	
	Для Сч = 1 По КоличествоИзбранныхТоваров Цикл

		ИмяДекорации = "ДекорацияИзбранныхТоваров" + XMLСтрока(Сч);

		Элемент = Элементы.Добавить(ИмяДекорации, Тип("ДекорацияФормы"), ГруппаРодитель);
		Элемент.Вид = ВидДекорацииФормы.Надпись;
		Элемент.Гиперссылка = Истина;
		Элемент.УстановитьДействие("Нажатие", "Подключаемый_ДекорацияИзбранныхТоваровНажатие");
		
		СтрокаОписания = ДинамическиеЭлементы.Добавить();
		СтрокаОписания.ИмяЭлемента = ИмяДекорации;

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ДекорацияИзбранныхТоваровНажатие(Элемент)
	
	ИмяЭлемента = Элемент.Имя;
	
	Отбор = Новый Структура("ИмяЭлемента", ИмяЭлемента);
	
	СтрокиТЗ = ДинамическиеЭлементы.НайтиСтроки(Отбор);
	
	Если СтрокиТЗ.Количество() > 0 Тогда
		
		СтрПар = Новый Структура("Номенклатура, Цена");
		СтрПар.Номенклатура = СтрокиТЗ[0].Номенклатура;
		СтрПар.Цена = ЦенаНоменклатуры(СтрПар.Номенклатура);
		ДобавитьНоменклатуру(СтрПар);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

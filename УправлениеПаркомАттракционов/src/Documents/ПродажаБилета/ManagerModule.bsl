#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура заполняет табличный документ для печати.
//
// Параметры:
//	ТабДок - ТабличныйДокумент - табличный документ для заполнения и печати.
//	Ссылка - Произвольный - содержит ссылку на объект, для которого вызвана команда печати.
Процедура Билет(ТабДок, Ссылка) Экспорт

	Макет = ПолучитьМакет("Билет");
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ ПродажаБилета.Номер,
		|	ПродажаБилета.Дата,
		|	ПродажаБилета.Номенклатура,
		|	ПродажаБилета.Номенклатура.КоличествоПосещений,
		|	ПродажаБилета.СуммаДокумента
		|ИЗ
		|	Документ.ПродажаБилета КАК ПродажаБилета
		|ГДЕ
		|	ПродажаБилета.Ссылка В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	Шапка = Макет.ПолучитьОбласть("Шапка");
	
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока Выборка.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		ПарОбласти = Новый Структура;
		ПарОбласти.Вставить("Дата", Формат(Выборка.Дата, "ДЛФ=D;"));
		ПарОбласти.Вставить("Номер", УдалитьЛидирующиеНули(Выборка.Номер));
		
		ОбластьЗаголовок.Параметры.Заполнить(ПарОбласти);
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Шапка.Параметры.Заполнить(Выборка);
		ТабДок.Вывести(Шапка, Выборка.Уровень());	
		
		ВставлятьРазделительСтраниц = Истина;
	КонецЦикла;

КонецПроцедуры

// Остаток бонусных баллов клиентов.
// 
// Параметры:
//  Клиент - СправочникСсылка.Клиенты
// Клиент
//  МоментВремени - Дата
// Момент времени
// 
// Возвращаемое значение:
//  Число - Остаток бонусных баллов клиентов
Функция ОстатокБонусныхБалловКлиентов(Клиент, МоментВремени) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	БонусныеБаллыКлиентовОстатки.СуммаБалловОстаток
	|ИЗ
	|	РегистрНакопления.БонусныеБаллыКлиентов.Остатки(&МоментВремени, Клиент = &Клиент) КАК БонусныеБаллыКлиентовОстатки";
	Запрос.УстановитьПараметр("Клиент", Клиент);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени);
	Результат = Запрос.Выполнить();
	
	УстановитьПривилегированныйРежим(Ложь);

	Если Результат.Пустой() Тогда
		
		Возврат 0;
		
	Иначе
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.СуммаБалловОстаток;

	КонецЕсли;

КонецФункции

// Перенести номенклатуру в табличную часть.
Процедура ПеренестиНоменклатуруВТабличнуюЧасть() Экспорт
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ПродажаБилета.Ссылка
	|ИЗ
	|	Документ.ПродажаБилета КАК ПродажаБилета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПродажаБилета.ПозицииПродажи КАК ПродажаБилетаПозицииПродажи
	|		ПО ПродажаБилетаПозицииПродажи.Ссылка = ПродажаБилета.Ссылка
	|ГДЕ
	|	ПродажаБилетаПозицииПродажи.Номенклатура ЕСТЬ NULL
	|	И ПродажаБилета.УдалитьНоменклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();

		СтрокаТЧ = ДокОбъект.ПозицииПродажи.Добавить();
		СтрокаТЧ.Номенклатура = ДокОбъект.УдалитьНоменклатура;
		СтрокаТЧ.Цена = ДокОбъект.УдалитьЦена;
		СтрокаТЧ.Количество = 1;
		СтрокаТЧ.Сумма = СтрокаТЧ.Цена;
		
		ДокОбъект.УдалитьНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
		ДокОбъект.УдалитьЦена = 0;
		ДокОбъект.ОбменДанными.Загрузка = Истина;
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;
	
КонецПроцедуры
	
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Удалить лидирующие нули.
// 
// Параметры:
//  Номер - Строка - Номер
// 
// Возвращаемое значение:
//  Строка - Удалить лидирующие нули
Функция УдалитьЛидирующиеНули(Номер)
	Результат = Номер;
	
	Пока СтрНачинаетсяС(Результат, "0") Цикл
		Результат = Сред(Результат, 2);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли

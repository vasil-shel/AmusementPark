#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Остаток бонусных баллов клиентов.
// 
// Параметры:
//  Клиент - СправочникСсылка.Клиенты
// Клиент
//  МоментВремени - Дата
// Момент времени
// 
// Возвращаемое значение:
//  Число - Остаток бонусных баллов клиентов
Функция ОстатокБонусныхБалловКлиентов(Клиент, МоментВремени) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	БонусныеБаллыКлиентовОстатки.СуммаБалловОстаток
	|ИЗ
	|	РегистрНакопления.БонусныеБаллыКлиентов.Остатки(&МоментВремени, Клиент = &Клиент) КАК БонусныеБаллыКлиентовОстатки";
	Запрос.УстановитьПараметр("Клиент", Клиент);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени);
	Результат = Запрос.Выполнить();
	
	УстановитьПривилегированныйРежим(Ложь);

	Если Результат.Пустой() Тогда
		
		Возврат 0;
		
	Иначе
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		Возврат Выборка.СуммаБалловОстаток;

	КонецЕсли;

КонецФункции

// Перенести номенклатуру в табличную часть.
Процедура ПеренестиНоменклатуруВТабличнуюЧасть() Экспорт
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ПродажаБилета.Ссылка
	|ИЗ
	|	Документ.ПродажаБилета КАК ПродажаБилета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПродажаБилета.ПозицииПродажи КАК ПродажаБилетаПозицииПродажи
	|		ПО ПродажаБилетаПозицииПродажи.Ссылка = ПродажаБилета.Ссылка
	|ГДЕ
	|	ПродажаБилетаПозицииПродажи.Номенклатура ЕСТЬ NULL
	|	И ПродажаБилета.УдалитьНоменклатура <> ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокОбъект = Выборка.Ссылка.ПолучитьОбъект();

		СтрокаТЧ = ДокОбъект.ПозицииПродажи.Добавить();
		СтрокаТЧ.Номенклатура = ДокОбъект.УдалитьНоменклатура;
		СтрокаТЧ.Цена = ДокОбъект.УдалитьЦена;
		СтрокаТЧ.Количество = 1;
		СтрокаТЧ.Сумма = СтрокаТЧ.Цена;
		
		ДокОбъект.УдалитьНоменклатура = Справочники.Номенклатура.ПустаяСсылка();
		ДокОбъект.УдалитьЦена = 0;
		ДокОбъект.ОбменДанными.Загрузка = Истина;
		ДокОбъект.Записать(РежимЗаписиДокумента.Запись);
		
	КонецЦикла;
	
КонецПроцедуры

#Область Печать

// СтандартныеПодсистемы.Печать

// Переопределяет настройки печати для объекта.
//
// Параметры:
//  Настройки - см. УправлениеПечатью.НастройкиПечатиОбъекта.
//
Процедура ПриОпределенииНастроекПечати(Настройки) Экспорт
    Настройки.ПриДобавленииКомандПечати = Истина;
КонецПроцедуры

// Определяет список команд печати.
//
// Параметры:
//  КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	Команда = КомандыПечати.Добавить();
    Команда.Идентификатор = "ПФ_MXL_Билет";
    Команда.Представление = НСтр("ru = 'Билет'");
    Команда.ПроверкаПроведенияПередПечатью = Истина;
    Команда.Порядок = 10; 

	Команда = КомандыПечати.Добавить();
    Команда.Идентификатор = "ПФ_MXL_Реклама";
    Команда.Представление = НСтр("ru = 'Реклама'");
    Команда.ПроверкаПроведенияПередПечатью = Истина; 
    Команда.Порядок = 20; 

	Команда = КомандыПечати.Добавить();
    Команда.Идентификатор = "ПФ_MXL_Билет,ПФ_MXL_Реклама";
    Команда.Представление = НСтр("ru = 'Комплект с рекламой при продаже'");
    Команда.ПроверкаПроведенияПередПечатью = Истина; 
    Команда.Порядок = 30; 

КонецПроцедуры

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - см. УправлениеПечатьюПереопределяемый.ПриПечати.МассивОбъектов
//  ПараметрыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыПечати
//  КоллекцияПечатныхФорм - см. УправлениеПечатьюПереопределяемый.ПриПечати.КоллекцияПечатныхФорм
//  ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//  ПараметрыВывода - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыВывода
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ПФ_MXL_Билет");

	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = ПечатнаяФормаБилет(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Билет'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ПродажаБилета.ПФ_MXL_Билет";
					
	КонецЕсли;
		
	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "ПФ_MXL_Реклама");

	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = ПечатнаяФормаРеклама(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Реклама'");
		ПечатнаяФорма.ПолныйПутьКМакету = "Документ.ПродажаБилета.ПФ_MXL_Реклама";
					
	КонецЕсли;
		
КонецПроцедуры

// Конец СтандартныеПодсистемы.Печать	
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Удалить лидирующие нули.
// 
// Параметры:
//  Номер - Строка - Номер
// 
// Возвращаемое значение:
//  Строка - Удалить лидирующие нули
Функция УдалитьЛидирующиеНули(Номер)
	Результат = Номер;
	
	Пока СтрНачинаетсяС(Результат, "0") Цикл
		Результат = Сред(Результат, 2);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПечатнаяФормаБилет(МассивОбъектов, ОбъектыПечати)

	ТабДок = Новый ТабличныйДокумент();

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПродажаБилета.ПФ_MXL_Билет");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПродажиОбороты.Регистратор КАК Ссылка,
	|	ПродажиОбороты.Регистратор.Дата КАК Дата,
	|	ПродажиОбороты.Регистратор.Номер КАК Номер,
	|	ПродажиОбороты.СуммаОборот КАК Сумма,
	|	ПродажиОбороты.Номенклатура,
	|	ПродажаБилетаПозицииПродажи.Количество,
	|	ПродажаБилетаПозицииПродажи.Номенклатура.КоличествоПосещений КАК КоличествоПосещений
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(,, Регистратор,) КАК ПродажиОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПродажаБилета.ПозицииПродажи КАК ПродажаБилетаПозицииПродажи
	|		ПО ПродажаБилетаПозицииПродажи.Ссылка = ПродажиОбороты.Регистратор
	|		И ПродажиОбороты.Номенклатура = ПродажаБилетаПозицииПродажи.Номенклатура
	|ГДЕ
	|	ПродажиОбороты.Регистратор В (&Ссылка)
	|ИТОГИ
	|	СУММА(Сумма),
	|	МАКСИМУМ(Дата) КАК Дата,
	|	МАКСИМУМ(Номер) КАК Номер
	|ПО
	|	Ссылка";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	ВыборкаД = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьОписаниеТовара = Макет.ПолучитьОбласть("ОписаниеТовара");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока ВыборкаД.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;

		ПарОбласти = Новый Структура;
		ПарОбласти.Вставить("Дата", Формат(ВыборкаД.Дата, "ДЛФ=D;"));
		ПарОбласти.Вставить("Номер", УдалитьЛидирующиеНули(ВыборкаД.Номер));
		
		ОбластьЗаголовок.Параметры.Заполнить(ПарОбласти);
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Выборка = ВыборкаД.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ОбластьОписаниеТовара.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(ОбластьОписаниеТовара);	

		КонецЦикла;
		
		ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(ВыборкаД.Номер, 3, 120);
		КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		ОбластьПодвал.Рисунки.QR.Картинка = КартинкаQRКода;
		
		
		ОбластьПодвал.Параметры.Заполнить(ВыборкаД);
		ТабДок.Вывести(ОбластьПодвал);	

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ВыборкаД.Ссылка);

		ВставлятьРазделительСтраниц = Истина;
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатнаяФормаРеклама(МассивОбъектов, ОбъектыПечати)

	ТабДок = Новый ТабличныйДокумент();

	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.ПродажаБилета.ПФ_MXL_Реклама");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПродажиОбороты.Регистратор КАК Ссылка,
	|	ПродажиОбороты.Регистратор.Дата КАК Дата,
	|	ПродажиОбороты.Регистратор.Номер КАК Номер
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(,, Регистратор,) КАК ПродажиОбороты
	|ГДЕ
	|	ПродажиОбороты.Регистратор В (&Ссылка)";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	ВыборкаД = Запрос.Выполнить().Выбрать();

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока ВыборкаД.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;

		ПарОбласти = Новый Структура;
		ПарОбласти.Вставить("Дата", Формат(ВыборкаД.Дата, "ДЛФ=D;"));
		ПарОбласти.Вставить("Номер", УдалитьЛидирующиеНули(ВыборкаД.Номер));
		
		ОбластьЗаголовок.Параметры.Заполнить(ПарОбласти);
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ВыборкаД.Ссылка);

		ВставлятьРазделительСтраниц = Истина;
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

#КонецОбласти

#КонецЕсли

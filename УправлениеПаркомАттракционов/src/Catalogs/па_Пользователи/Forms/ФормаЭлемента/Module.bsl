
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ТекущийОбъект.ИдентиФикаторПользователяИБ);
	
	Если ПользовательИБ = Неопределено Тогда
		
		ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();
		
	КонецЕсли;

	ПользовательИБ.АутентификацияСтандартная = ДоступРазрешен;
	ПользовательИБ.ПолноеИмя = ТекущийОбъект.Наименование;
	ПользовательИБ.Имя = Логин;
	
	Если ПарольУстановлен Тогда
		
		ПользовательИБ.Пароль = Пароль;

	КонецЕсли;
	
	ПользовательИБ.Роли.Очистить();
	
	Если РольПользователя = Перечисления.РолиПользователей.Кассир Тогда

		ПользовательИБ.Роли.Добавить(Метаданные.Роли.Кассир);
				
	ИначеЕсли РольПользователя = Перечисления.РолиПользователей.ОператорАттракциона Тогда

		ПользовательИБ.Роли.Добавить(Метаданные.Роли.ОператорАттракциона);
				
	ИначеЕсли РольПользователя = Перечисления.РолиПользователей.Администратор Тогда

		ПользовательИБ.Роли.Добавить(Метаданные.Роли.па_ПолныеПрава);

	КонецЕсли;
	
	ПользовательИБ.Записать();
	
	ТекущийОбъект.ИдентиФикаторПользователяИБ = ПользовательИБ.УникальныйИдентификатор;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Объект.ИдентиФикаторПользователяИБ);

	Если ПользовательИБ <> Неопределено Тогда
	
		Объект.Наименование = ПользовательИБ.ПолноеИмя;
		Логин = ПользовательИБ.Имя;
		ДоступРазрешен = ПользовательИБ.АутентификацияСтандартная;
		
		УстановитьПривилегированныйРежим(Истина);
		ХешПароля = ПользовательИБ.СохраняемоеЗначениеПароля;
		УстановитьПривилегированныйРежим(Ложь);
		
		Если ЗначениеЗаполнено(ХешПароля) Тогда
			
			ПарольУстановлен = Истина;
			Пароль = "№;%:??**пар";
			
		КонецЕсли;
		
		ЭтоАдминистратор = Ложь;
		ЭтоКассир = Ложь;
		ЭтоОператор = Ложь;
		
		Для Каждого Роль Из ПользовательИБ.Роли Цикл
			
			Если Роль = Метаданные.Роли.па_ПолныеПрава Тогда
				
				ЭтоАдминистратор = Истина;
				
			ИначеЕсли Роль = Метаданные.Роли.Кассир Тогда
				
				ЭтоКассир = Истина;
				
			ИначеЕсли Роль = Метаданные.Роли.ОператорАттракциона Тогда
				
				ЭтоОператор = Истина;
				
			КонецЕсли;
			
		КонецЦикла; 
			
		Если ЭтоАдминистратор Тогда
			
			РольПользователя = Перечисления.РолиПользователей.Администратор;
			
		ИначеЕсли ЭтоКассир Тогда
			
			РольПользователя = Перечисления.РолиПользователей.Кассир;
			
		ИначеЕсли ЭтоОператор Тогда
			
			РольПользователя = Перечисления.РолиПользователей.ОператорАттракциона;
			
		КонецЕсли;
		
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	Элементы.Пароль.РежимПароля = Истина;
	ПарольУстановлен = Ложь;
	
	Если ЗначениеЗаполнено(Пароль) Тогда
		Пароль = "************";
	КонецЕсли;

КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеДоступностьюЭлементовФормы(ЭтотОбъект);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПарольПриИзменении(Элемент)

	ПарольУстановлен = Истина;	

КонецПроцедуры

&НаКлиенте
Процедура ДоступРазрешенПриИзменении(Элемент)
	
	УправлениеДоступностьюЭлементовФормы(ЭтотОбъект);

КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура СгенерироватьПароль(Команда)
	
	Пароль = СлучайныйПароль();
	Элементы.Пароль.РежимПароля = Ложь;
	ПарольУстановлен = Истина;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СлучайныйПароль()
	
	ГСП = Новый ГенераторСлучайныхПаролей();
	Возврат ГСП.СлучайныйПароль(8, Истина);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеДоступностьюЭлементовФормы(Форма)
	
	УправлениеПользователемДоступно = Форма.ДоступРазрешен;
	Форма.Элементы.Логин.Доступность = УправлениеПользователемДоступно;
	Форма.Элементы.ГруппаПароль.Доступность = УправлениеПользователемДоступно;
	Форма.Элементы.РольПользователя.Доступность = УправлениеПользователемДоступно;
	
КонецПроцедуры

#КонецОбласти

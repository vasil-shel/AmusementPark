
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает сведения о внешней обработке.
//
// Возвращаемое значение:
//   Структура - Подробнее см. ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке().
//
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке("2.3.1.73");
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиПечатнаяФорма();
	ПараметрыРегистрации.Версия = "1.3";
	ПараметрыРегистрации.БезопасныйРежим = Ложь;
	ПараметрыРегистрации.Назначение.Добавить("Документ.ПродажаБилета");
	
	Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Представление = НСтр("ru = 'Билет (внешняя печатная форма'");
	Команда.Идентификатор = "Билет";
	Команда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыВызовСерверногоМетода();
	Команда.Модификатор = "ПечатьMXL";
	
	Возврат ПараметрыРегистрации;
КонецФункции

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - см. УправлениеПечатьюПереопределяемый.ПриПечати.МассивОбъектов
//  КоллекцияПечатныхФорм - см. УправлениеПечатьюПереопределяемый.ПриПечати.КоллекцияПечатныхФорм
//  ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//  ПараметрыВывода - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыВывода
//
Процедура Печать(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт

	ПечатнаяФорма = УправлениеПечатью.СведенияОПечатнойФорме(КоллекцияПечатныхФорм, "Билет");

	Если ПечатнаяФорма <> Неопределено Тогда
		
		ПечатнаяФорма.ТабличныйДокумент = ПечатнаяФормаБилет(МассивОбъектов, ОбъектыПечати);
		ПечатнаяФорма.СинонимМакета = НСтр("ru = 'Билет'");
					
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатнаяФормаБилет(МассивОбъектов, ОбъектыПечати)

	ТабДок = Новый ТабличныйДокумент();

	Макет = ПолучитьМакет("ПФ_MXL_Билет");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ПродажиОбороты.Регистратор КАК Ссылка,
	|	ПродажиОбороты.Регистратор.Дата КАК Дата,
	|	ПродажиОбороты.Регистратор.Номер КАК Номер,
	|	ПродажиОбороты.СуммаОборот КАК Сумма,
	|	ПродажиОбороты.Номенклатура,
	|	ПродажаБилетаПозицииПродажи.Количество,
	|	ПродажаБилетаПозицииПродажи.Номенклатура.КоличествоПосещений КАК КоличествоПосещений
	|ИЗ
	|	РегистрНакопления.Продажи.Обороты(,, Регистратор,) КАК ПродажиОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПродажаБилета.ПозицииПродажи КАК ПродажаБилетаПозицииПродажи
	|		ПО ПродажаБилетаПозицииПродажи.Ссылка = ПродажиОбороты.Регистратор
	|		И ПродажиОбороты.Номенклатура = ПродажаБилетаПозицииПродажи.Номенклатура
	|ГДЕ
	|	ПродажиОбороты.Регистратор В (&Ссылка)
	|ИТОГИ
	|	СУММА(Сумма),
	|	МАКСИМУМ(Дата) КАК Дата,
	|	МАКСИМУМ(Номер) КАК Номер
	|ПО
	|	Ссылка";
	Запрос.Параметры.Вставить("Ссылка", МассивОбъектов);
	ВыборкаД = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьОписаниеТовара = Макет.ПолучитьОбласть("ОписаниеТовара");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ТабДок.Очистить();

	ВставлятьРазделительСтраниц = Ложь;
	Пока ВыборкаД.Следующий() Цикл
		Если ВставлятьРазделительСтраниц Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		НомерСтрокиНачало = ТабДок.ВысотаТаблицы + 1;

		ПарОбласти = Новый Структура;
		ПарОбласти.Вставить("Дата", Формат(ВыборкаД.Дата, "ДЛФ=D;"));
		ПарОбласти.Вставить("Номер", УдалитьЛидирующиеНули(ВыборкаД.Номер));
		
		ОбластьЗаголовок.Параметры.Заполнить(ПарОбласти);
		
		ТабДок.Вывести(ОбластьЗаголовок);
		
		Выборка = ВыборкаД.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ОбластьОписаниеТовара.Параметры.Заполнить(Выборка);
			ТабДок.Вывести(ОбластьОписаниеТовара);	

		КонецЦикла;
		
		ДанныеQRКода = ГенерацияШтрихкода.ДанныеQRКода(ВыборкаД.Номер, 3, 120);
		КартинкаQRКода = Новый Картинка(ДанныеQRКода);
		ОбластьПодвал.Рисунки.QR.Картинка = КартинкаQRКода;
		
		
		ОбластьПодвал.Параметры.Заполнить(ВыборкаД);
		ТабДок.Вывести(ОбластьПодвал);	

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДок, НомерСтрокиНачало, ОбъектыПечати, ВыборкаД.Ссылка);

		ВставлятьРазделительСтраниц = Истина;
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

// Удалить лидирующие нули.
// 
// Параметры:
//  Номер - Строка - Номер
// 
// Возвращаемое значение:
//  Строка - Удалить лидирующие нули
Функция УдалитьЛидирующиеНули(Номер)
	Результат = Номер;
	
	Пока СтрНачинаетсяС(Результат, "0") Цикл
		Результат = Сред(Результат, 2);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
